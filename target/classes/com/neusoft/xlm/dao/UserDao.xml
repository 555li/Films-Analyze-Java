<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neusoft.xlm.dao.UserDao">

    <resultMap type="com.neusoft.xlm.entity.users.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="queryById" resultMap="UserMap" >
        select
          id, email, password
        from user
        where id = #{id}
    </select>

    <select id="queryByEmail" resultMap="UserMap" >
        select
            id, email, password
        from user
        where email = #{email}
    </select>

    <select id="queryAllByLimit" resultMap="UserMap">
        select
          id, email, password
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>


    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>
    </select>


    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(email, password)
        values (#{email}, #{password})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(email, password)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.email}, #{entity.password})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(email, password)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.email}, #{entity.password})
        </foreach>
        on duplicate key update
        email = values(email),
        password = values(password)
    </insert>

    <update id="update">
        update user set password = #{password} where email = #{email}
    </update>

    <delete id="deleteById">
        delete from user where id = #{id}
    </delete>
</mapper>

